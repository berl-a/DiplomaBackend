/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 07 14:48:24 GMT 2018
 */

package system.model.classes.games;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import system.model.classes.games.SingleChoiceAnswer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SingleChoiceAnswer_ESTest extends SingleChoiceAnswer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Double double0 = new Double(0.0);
      SingleChoiceAnswer singleChoiceAnswer0 = new SingleChoiceAnswer(0, double0);
      singleChoiceAnswer0.getCorrect();
      assertEquals(0, singleChoiceAnswer0.getAnswerIndex());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Double double0 = new Double(1);
      SingleChoiceAnswer singleChoiceAnswer0 = new SingleChoiceAnswer(1, double0);
      singleChoiceAnswer0.getCorrect();
      assertEquals(1, singleChoiceAnswer0.getAnswerIndex());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SingleChoiceAnswer singleChoiceAnswer0 = new SingleChoiceAnswer((-535));
      Double double0 = new Double((-3597.1544484));
      singleChoiceAnswer0.setCorrect(double0);
      singleChoiceAnswer0.getCorrect();
      assertEquals((-535), singleChoiceAnswer0.getAnswerIndex());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Double double0 = new Double(0.0);
      SingleChoiceAnswer singleChoiceAnswer0 = new SingleChoiceAnswer(0, double0);
      int int0 = singleChoiceAnswer0.getAnswerIndex();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Double double0 = new Double((-1));
      SingleChoiceAnswer singleChoiceAnswer0 = new SingleChoiceAnswer((-1), double0);
      int int0 = singleChoiceAnswer0.getAnswerIndex();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SingleChoiceAnswer singleChoiceAnswer0 = new SingleChoiceAnswer((-2981));
      singleChoiceAnswer0.setAnswerIndex((-2981));
      assertEquals((-2981), singleChoiceAnswer0.getAnswerIndex());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Double double0 = new Double(9);
      SingleChoiceAnswer singleChoiceAnswer0 = new SingleChoiceAnswer(9, double0);
      int int0 = singleChoiceAnswer0.getAnswerIndex();
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SingleChoiceAnswer singleChoiceAnswer0 = new SingleChoiceAnswer((-2981));
      singleChoiceAnswer0.getCorrect();
      assertEquals((-2981), singleChoiceAnswer0.getAnswerIndex());
  }
}
