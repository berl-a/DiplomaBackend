/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 04 01:37:48 GMT 2018
 */

package system.model.games;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import system.model.games.MultipleChoiceAnswer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MultipleChoiceAnswer_ESTest extends MultipleChoiceAnswer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = MultipleChoiceAnswer.__CLR4_1_21ie1iejp8v55z9.lambdaInc(0, "*-Xq'drq", 0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MultipleChoiceAnswer.__CLR4_1_21ie1iejp8v55z9 multipleChoiceAnswer___CLR4_1_21ie1iejp8v55z9_0 = new MultipleChoiceAnswer.__CLR4_1_21ie1iejp8v55z9();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Double double0 = new Double(0.0);
      system.model.games.MultipleChoiceAnswer multipleChoiceAnswer0 = new system.model.games.MultipleChoiceAnswer((LinkedList<Integer>) null, double0);
      Double double1 = multipleChoiceAnswer0.getCorrect();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      system.model.games.MultipleChoiceAnswer multipleChoiceAnswer0 = new system.model.games.MultipleChoiceAnswer((LinkedList<Integer>) null);
      Double double0 = new Double((-1203));
      multipleChoiceAnswer0.setCorrect(double0);
      Double double1 = multipleChoiceAnswer0.getCorrect();
      assertEquals((-1203.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Double double0 = new Double(1198.58874905);
      system.model.games.MultipleChoiceAnswer multipleChoiceAnswer0 = new system.model.games.MultipleChoiceAnswer((LinkedList<Integer>) null, double0);
      Double double1 = multipleChoiceAnswer0.getCorrect();
      assertEquals(1198.58874905, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Double double0 = new Double((-1.87));
      system.model.games.MultipleChoiceAnswer multipleChoiceAnswer0 = new system.model.games.MultipleChoiceAnswer((LinkedList<Integer>) null, double0);
      LinkedList<Integer> linkedList0 = multipleChoiceAnswer0.getAnswerIndexes();
      assertNull(linkedList0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      system.model.games.MultipleChoiceAnswer multipleChoiceAnswer0 = new system.model.games.MultipleChoiceAnswer((LinkedList<Integer>) null);
      Double double0 = multipleChoiceAnswer0.getCorrect();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Double double0 = new Double((-1.87));
      system.model.games.MultipleChoiceAnswer multipleChoiceAnswer0 = new system.model.games.MultipleChoiceAnswer((LinkedList<Integer>) null, double0);
      multipleChoiceAnswer0.setAnswerIndexes((LinkedList<Integer>) null);
  }
}
