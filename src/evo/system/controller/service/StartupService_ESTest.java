/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 03 22:38:54 GMT 2018
 */

package system.controller.service;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import system.controller.service.FilesService;
import system.controller.service.StartupService;
import system.controller.service.UserService;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StartupService_ESTest extends StartupService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StartupService startupService0 = new StartupService();
      FilesService filesService0 = mock(FilesService.class, new ViolatedAssumptionAnswer());
      Injector.inject(startupService0, (Class<?>) StartupService.class, "filesService", (Object) filesService0);
      UserService userService0 = mock(UserService.class, new ViolatedAssumptionAnswer());
      Injector.inject(startupService0, (Class<?>) StartupService.class, "userService", (Object) userService0);
      Injector.validateBean(startupService0, (Class<?>) StartupService.class);
      Injector.executePostConstruct((Object) startupService0, (Class<?>) StartupService.class);
      startupService0.postConstruct();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = system.controller.service.StartupService.__CLR4_1_2m7m7jp8v5513.lambdaInc((-206), "nok", 1765);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      system.controller.service.StartupService.__CLR4_1_2m7m7jp8v5513 startupService___CLR4_1_2m7m7jp8v5513_0 = new system.controller.service.StartupService.__CLR4_1_2m7m7jp8v5513();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StartupService startupService0 = new StartupService();
      FilesService filesService0 = mock(FilesService.class, new ViolatedAssumptionAnswer());
      Injector.inject(startupService0, (Class<?>) StartupService.class, "filesService", (Object) filesService0);
      UserService userService0 = mock(UserService.class, new ViolatedAssumptionAnswer());
      Injector.inject(startupService0, (Class<?>) StartupService.class, "userService", (Object) userService0);
      Injector.validateBean(startupService0, (Class<?>) StartupService.class);
      Injector.executePostConstruct((Object) startupService0, (Class<?>) StartupService.class);
      startupService0.filesService = null;
      // Undeclared exception!
      try { 
        startupService0.postConstruct();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("system.controller.service.StartupService", e);
      }
  }
}
