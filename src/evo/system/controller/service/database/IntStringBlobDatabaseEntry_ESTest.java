/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 03 22:37:50 GMT 2018
 */

package system.controller.service.database;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.HashSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import system.controller.service.database.IntStringBlobDatabaseEntry;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IntStringBlobDatabaseEntry_ESTest extends IntStringBlobDatabaseEntry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IntStringBlobDatabaseEntry.__CLR4_1_2bbjp8v54bg intStringBlobDatabaseEntry___CLR4_1_2bbjp8v54bg0 = new IntStringBlobDatabaseEntry.__CLR4_1_2bbjp8v54bg();
      Object object0 = IntStringBlobDatabaseEntry.__CLR4_1_2bbjp8v54bg.lambdaInc(0, (Object) intStringBlobDatabaseEntry___CLR4_1_2bbjp8v54bg0, 0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      system.controller.service.database.IntStringBlobDatabaseEntry intStringBlobDatabaseEntry0 = null;
      try {
        intStringBlobDatabaseEntry0 = new system.controller.service.database.IntStringBlobDatabaseEntry((HashSet<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("system.controller.service.database.IntStringBlobDatabaseEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      system.controller.service.database.IntStringBlobDatabaseEntry intStringBlobDatabaseEntry0 = new system.controller.service.database.IntStringBlobDatabaseEntry((HashMap<String, Object>) null);
      // Undeclared exception!
      try { 
        intStringBlobDatabaseEntry0.getFieldNames();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("system.controller.service.database.IntStringBlobDatabaseEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      system.controller.service.database.IntStringBlobDatabaseEntry intStringBlobDatabaseEntry0 = new system.controller.service.database.IntStringBlobDatabaseEntry((HashMap<String, Object>) null);
      HashMap<String, Object> hashMap0 = intStringBlobDatabaseEntry0.getFields();
      assertNull(hashMap0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      system.controller.service.database.IntStringBlobDatabaseEntry intStringBlobDatabaseEntry0 = new system.controller.service.database.IntStringBlobDatabaseEntry((HashMap<String, Object>) null);
      // Undeclared exception!
      try { 
        intStringBlobDatabaseEntry0.getField("3du/ay&r:|u?p");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("system.controller.service.database.IntStringBlobDatabaseEntry", e);
      }
  }
}
