/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 03 22:47:30 GMT 2018
 */

package system.controller.service.database;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import system.controller.service.database.IntStringBlobDatabaseEntry;
import system.controller.service.database.MySQLDatabaseService;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MySQLDatabaseService_ESTest extends MySQLDatabaseService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IntStringBlobDatabaseEntry intStringBlobDatabaseEntry0 = mock(IntStringBlobDatabaseEntry.class, new ViolatedAssumptionAnswer());
      Object object0 = MySQLDatabaseService.__CLR4_1_2mmjp8v54gi.lambdaInc(0, intStringBlobDatabaseEntry0, 0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MySQLDatabaseService.__CLR4_1_2mmjp8v54gi mySQLDatabaseService___CLR4_1_2mmjp8v54gi0 = new MySQLDatabaseService.__CLR4_1_2mmjp8v54gi();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      system.controller.service.database.MySQLDatabaseService mySQLDatabaseService0 = new system.controller.service.database.MySQLDatabaseService();
      // Undeclared exception!
      try { 
        mySQLDatabaseService0.removeItemWhereStringFieldEqualsValue("AND", "AND", "AND");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("system.controller.service.database.MySQLDatabaseService", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      system.controller.service.database.MySQLDatabaseService mySQLDatabaseService0 = new system.controller.service.database.MySQLDatabaseService();
      // Undeclared exception!
      try { 
        Injector.executePostConstruct((Object) mySQLDatabaseService0, (Class<?>) system.controller.service.database.MySQLDatabaseService.class);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to execute @PostConstructor in system.controller.service.database.MySQLDatabaseService
         //
         verifyException("org.evosuite.runtime.javaee.injection.Injector", e);
      }
  }
}
