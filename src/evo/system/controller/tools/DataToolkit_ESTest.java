/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 03 13:34:40 GMT 2018
 */

package system.controller.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import system.controller.tools.DataToolkit;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DataToolkit_ESTest extends DataToolkit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DataToolkit dataToolkit0 = new DataToolkit();
      DataToolkit.getUniqueId();
      byte[] byteArray0 = DataToolkit.objectToByteArray("00000000-0100-4000-8200-000003000000");
      JsonArray jsonArray0 = DataToolkit.convertToJsonArray(dataToolkit0);
      JsonArray jsonArray1 = DataToolkit.convertToJsonArray(jsonArray0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)81;
      byteArray1[1] = (byte) (-66);
      byteArray1[2] = (byte) (-62);
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte)0;
      byteArray1[6] = (byte)33;
      byteArray1[7] = (byte) (-66);
      DataToolkit.byteArrayToObject(byteArray0);
      DataToolkit.convertToJsonArray(jsonArray1);
      DataToolkit.getUniqueId();
      JsonObject jsonObject0 = DataToolkit.convertToJsonObject(jsonArray0);
      // Undeclared exception!
      DataToolkit.convertToJsonArray(jsonObject0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DataToolkit.getUniqueId();
      DataToolkit dataToolkit0 = new DataToolkit();
      byte[] byteArray0 = DataToolkit.objectToByteArray("00000000-0100-4000-8200-000003000000");
      DataToolkit.byteArrayToObject(byteArray0);
      // Undeclared exception!
      try { 
        DataToolkit.convertToJsonArray("00000000-0100-4000-8200-000003000000");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at 1 [character 2 line 1]
         //
         verifyException("org.json.JSONTokener", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataToolkit.convertToJsonArray("'ST1|");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at 1 [character 2 line 1]
         //
         verifyException("org.json.JSONTokener", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DataToolkit dataToolkit0 = new DataToolkit();
      DataToolkit.convertToJsonObject(dataToolkit0);
      DataToolkit.objectToByteArray(dataToolkit0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte)0;
      Object object0 = DataToolkit.byteArrayToObject(byteArray0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DataToolkit dataToolkit0 = new DataToolkit();
      DataToolkit.getUniqueId();
      JsonArray jsonArray0 = DataToolkit.convertToJsonArray(dataToolkit0);
      DataToolkit.convertToJsonArray(jsonArray0);
      DataToolkit.objectToByteArray("d[");
      JsonObject jsonObject0 = DataToolkit.convertToJsonObject(dataToolkit0);
      JsonObject jsonObject1 = DataToolkit.convertToJsonObject(jsonObject0);
      assertNotSame(jsonObject0, jsonObject1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataToolkit.convertToJsonArray((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at 1 [character 2 line 1]
         //
         verifyException("org.json.JSONTokener", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DataToolkit.getUniqueId();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte) (-20);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte) (-116);
      byteArray0[8] = (byte)101;
      DataToolkit.byteArrayToObject(byteArray0);
      DataToolkit.byteArrayToObject(byteArray0);
      // Undeclared exception!
      try { 
        DataToolkit.convertToJsonObject((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at 1 [character 2 line 1]
         //
         verifyException("org.json.JSONTokener", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DataToolkit dataToolkit0 = new DataToolkit();
      LinkedList<String> linkedList0 = null;
      // Undeclared exception!
      try { 
        DataToolkit.areListsTheSame((LinkedList<String>) null, (LinkedList<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("system.controller.tools.DataToolkit", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DataToolkit.getUniqueId();
      // Undeclared exception!
      try { 
        DataToolkit.convertToJsonObject("00000000-0100-4000-8200-000003000000");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at 1 [character 2 line 1]
         //
         verifyException("org.json.JSONTokener", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DataToolkit.getUniqueId();
      byte[] byteArray0 = DataToolkit.objectToByteArray((Object) null);
      DataToolkit.byteArrayToObject(byteArray0);
      DataToolkit.objectToByteArray((Object) null);
      DataToolkit dataToolkit0 = new DataToolkit();
      // Undeclared exception!
      try { 
        DataToolkit.areListsTheSame((LinkedList<String>) null, (LinkedList<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("system.controller.tools.DataToolkit", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DataToolkit dataToolkit0 = new DataToolkit();
      byte[] byteArray0 = new byte[0];
      DataToolkit.byteArrayToObject(byteArray0);
      String string0 = DataToolkit.getUniqueId();
      assertEquals("00000000-0100-4000-8200-000003000000", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataToolkit.byteArrayToObject((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataToolkit.byteArrayToObject((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DataToolkit.getUniqueId();
      // Undeclared exception!
      try { 
        DataToolkit.convertToJsonArray("00000000-0100-4000-8200-000003000000");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONArray text must start with '[' at 1 [character 2 line 1]
         //
         verifyException("org.json.JSONTokener", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DataToolkit.getUniqueId();
      DataToolkit.objectToByteArray("00000000-0100-4000-8200-000003000000");
      DataToolkit dataToolkit0 = new DataToolkit();
      // Undeclared exception!
      try { 
        DataToolkit.areListsTheSame((LinkedList<String>) null, (LinkedList<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("system.controller.tools.DataToolkit", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      DataToolkit.byteArrayToObject(byteArray0);
      // Undeclared exception!
      try { 
        DataToolkit.convertToJsonObject((Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A JSONObject text must begin with '{' at 1 [character 2 line 1]
         //
         verifyException("org.json.JSONTokener", e);
      }
  }
}
