/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Dec 07 14:56:34 GMT 2018
 */

package system.controller.tools;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class DataToolkit_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "system.controller.tools.DataToolkit"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "Cp1251"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\admin\\AppData\\Local\\Temp\\"); 
    java.lang.System.setProperty("user.country", "RU"); 
    java.lang.System.setProperty("user.dir", "D:\\Data\\Diploma\\Project\\Backend"); 
    java.lang.System.setProperty("user.home", "C:\\Users\\admin"); 
    java.lang.System.setProperty("user.language", "ru"); 
    java.lang.System.setProperty("user.name", "admin"); 
    java.lang.System.setProperty("user.timezone", "Europe/Belgrade"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DataToolkit_ESTest_scaffolding.class.getClassLoader() ,
      "org.codehaus.jackson.annotate.JsonIgnoreProperties",
      "org.codehaus.jackson.map.JsonSerializableWithType",
      "org.codehaus.jackson.map.type.TypeBindings",
      "org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node",
      "org.codehaus.jackson.map.SerializationConfig",
      "org.codehaus.jackson.map.introspect.AnnotationMap",
      "com.google.gson.internal.bind.JsonTreeWriter",
      "org.json.JSONException",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$StackTraceElementDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$CharacterDeserializer",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$IntKD",
      "org.codehaus.jackson.map.JsonSerializable",
      "org.codehaus.jackson.map.ser.std.TimeZoneSerializer",
      "org.codehaus.jackson.map.deser.std.ClassDeserializer",
      "org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD",
      "org.codehaus.jackson.map.util.ArrayBuilders",
      "org.codehaus.jackson.map.introspect.POJOPropertyBuilder",
      "org.codehaus.jackson.map.ser.std.ToStringSerializer",
      "org.codehaus.jackson.map.DeserializerFactory",
      "org.codehaus.jackson.map.ser.std.CalendarSerializer",
      "org.codehaus.jackson.map.ser.StdSerializerProvider",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$URLDeserializer",
      "org.codehaus.jackson.map.KeyDeserializers",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase",
      "org.json.JSONObject$Null",
      "org.codehaus.jackson.map.deser.std.JavaTypeDeserializer",
      "org.codehaus.jackson.map.introspect.NopAnnotationIntrospector",
      "com.google.gson.JsonParser",
      "org.codehaus.jackson.SerializableString",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$BigDecimalDeserializer",
      "org.codehaus.jackson.map.util.RootNameLookup",
      "org.codehaus.jackson.map.deser.std.EnumMapDeserializer",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$InetAddressDeserializer",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$TimeZoneDeserializer",
      "org.codehaus.jackson.map.introspect.BasicClassIntrospector$MinimalMethodFilter",
      "org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$BooleanDeserializer",
      "org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket",
      "org.json.JSONTokener",
      "org.codehaus.jackson.map.ser.std.ObjectArraySerializer",
      "org.codehaus.jackson.impl.JsonParserMinimalBase",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$CharsetDeserializer",
      "org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter",
      "com.google.gson.JsonNull",
      "org.codehaus.jackson.node.LongNode",
      "org.codehaus.jackson.impl.JsonGeneratorBase",
      "org.codehaus.jackson.map.MapperConfig$Base",
      "com.google.gson.JsonObject",
      "org.codehaus.jackson.map.ser.StdSerializers$LongSerializer",
      "org.codehaus.jackson.PrettyPrinter",
      "org.codehaus.jackson.map.ser.std.IndexedStringListSerializer",
      "org.codehaus.jackson.map.util.StdDateFormat",
      "org.codehaus.jackson.annotate.JsonTypeInfo",
      "org.codehaus.jackson.map.introspect.BasicClassIntrospector",
      "org.codehaus.jackson.map.ResolvableSerializer",
      "org.codehaus.jackson.schema.SchemaAware",
      "org.json.JSONObject",
      "com.google.gson.internal.LinkedTreeMap$1",
      "org.codehaus.jackson.util.TextBuffer",
      "org.codehaus.jackson.map.annotate.JsonTypeResolver",
      "org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator",
      "com.google.gson.internal.LinkedTreeMap$EntrySet",
      "org.codehaus.jackson.JsonGenerationException",
      "org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty",
      "org.codehaus.jackson.util.BufferRecycler",
      "com.google.gson.JsonIOException",
      "com.google.gson.internal.bind.TypeAdapters",
      "org.codehaus.jackson.JsonGenerator$Feature",
      "org.codehaus.jackson.sym.Name",
      "org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty",
      "org.codehaus.jackson.util.TokenBuffer",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$IntDeser",
      "org.codehaus.jackson.impl.JsonParserBase",
      "org.codehaus.jackson.node.JsonNodeFactory",
      "org.codehaus.jackson.map.deser.BasicDeserializerFactory",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$DoubleDeserializer",
      "org.codehaus.jackson.map.introspect.VisibilityChecker$Std",
      "com.google.gson.JsonPrimitive",
      "org.codehaus.jackson.map.ser.BeanSerializerBuilder",
      "org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase",
      "org.codehaus.jackson.map.ser.std.StringSerializer",
      "org.codehaus.jackson.node.TreeTraversingParser",
      "org.codehaus.jackson.map.type.CollectionType",
      "org.codehaus.jackson.io.SerializedString",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$UUIDDeserializer",
      "org.codehaus.jackson.util.BufferRecycler$CharBufferType",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$DoubleDeser",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$ShortArraySerializer",
      "org.codehaus.jackson.map.annotate.JsonDeserialize",
      "org.codehaus.jackson.map.JsonMappingException$Reference",
      "org.codehaus.jackson.map.ser.std.ContainerSerializerBase",
      "org.codehaus.jackson.map.deser.StdDeserializerProvider",
      "org.codehaus.jackson.map.SerializerFactory",
      "com.google.gson.internal.bind.TypeAdapters$23",
      "com.google.gson.internal.bind.TypeAdapters$24",
      "com.google.gson.internal.bind.TypeAdapters$25",
      "com.google.gson.internal.bind.TypeAdapters$26",
      "org.codehaus.jackson.JsonProcessingException",
      "com.google.gson.internal.bind.TypeAdapters$20",
      "com.google.gson.internal.bind.TypeAdapters$21",
      "org.codehaus.jackson.map.ser.SerializerBase",
      "com.google.gson.internal.bind.TypeAdapters$22",
      "com.google.gson.internal.bind.TypeAdapters$27",
      "com.google.gson.internal.bind.TypeAdapters$28",
      "org.codehaus.jackson.JsonGenerator",
      "com.google.gson.internal.bind.TypeAdapters$29",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$IntegerDeserializer",
      "system.controller.tools.DataToolkit",
      "org.codehaus.jackson.annotate.JsonAutoDetect$1",
      "org.codehaus.jackson.annotate.JsonMethod",
      "org.codehaus.jackson.map.ser.std.DateSerializer",
      "org.codehaus.jackson.annotate.JsonAutoDetect$Visibility",
      "org.codehaus.jackson.node.ValueNode",
      "com.google.gson.internal.bind.TypeAdapters$34",
      "org.codehaus.jackson.map.ser.StdSerializers$SqlTimeSerializer",
      "com.google.gson.internal.bind.TypeAdapters$35",
      "org.codehaus.jackson.map.ser.BeanSerializerFactory",
      "org.codehaus.jackson.map.JsonSerializer",
      "org.codehaus.jackson.map.introspect.AnnotatedWithParams",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer",
      "com.google.gson.internal.bind.TypeAdapters$30",
      "org.codehaus.jackson.map.deser.std.ContainerDeserializerBase",
      "com.google.gson.internal.bind.TypeAdapters$32",
      "com.google.gson.internal.bind.TypeAdapters$33",
      "com.google.gson.JsonArray",
      "org.codehaus.jackson.map.introspect.MethodFilter",
      "org.codehaus.jackson.map.deser.StdDeserializationContext",
      "org.codehaus.jackson.map.deser.std.EnumSetDeserializer",
      "org.codehaus.jackson.map.AbstractTypeResolver",
      "org.codehaus.jackson.map.AnnotationIntrospector$Pair",
      "com.google.gson.internal.LinkedTreeMap$EntrySet$1",
      "com.google.gson.TypeAdapterFactory",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$LocaleDeserializer",
      "org.codehaus.jackson.map.MapperConfig$ConfigFeature",
      "org.codehaus.jackson.map.SerializationConfig$Feature",
      "org.codehaus.jackson.Versioned",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ByteKD",
      "org.codehaus.jackson.map.type.TypeBase",
      "org.codehaus.jackson.map.ser.BasicSerializerFactory",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$LongKD",
      "org.codehaus.jackson.node.ContainerNode",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$PatternDeserializer",
      "org.codehaus.jackson.map.introspect.AnnotatedConstructor",
      "org.codehaus.jackson.map.deser.std.StringCollectionDeserializer",
      "org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket",
      "org.codehaus.jackson.impl.ReaderBasedParser",
      "org.codehaus.jackson.map.type.MapLikeType",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$ByteDeserializer",
      "com.google.gson.internal.LinkedTreeMap$Node",
      "org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer",
      "org.codehaus.jackson.map.ser.std.StdJdkSerializers$FileSerializer",
      "org.codehaus.jackson.map.annotate.JsonView",
      "org.codehaus.jackson.map.type.CollectionLikeType",
      "org.codehaus.jackson.util.BufferRecycler$ByteBufferType",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$CharDeser",
      "com.google.gson.internal.Streams",
      "org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer",
      "com.google.gson.internal.bind.TypeAdapters$12",
      "com.google.gson.internal.bind.TypeAdapters$13",
      "com.google.gson.internal.bind.TypeAdapters$14",
      "com.google.gson.internal.bind.TypeAdapters$15",
      "org.codehaus.jackson.map.introspect.AnnotatedMethodMap",
      "com.google.gson.internal.bind.TypeAdapters$10",
      "com.google.gson.internal.bind.TypeAdapters$11",
      "org.codehaus.jackson.map.deser.std.AtomicReferenceDeserializer",
      "org.codehaus.jackson.map.introspect.POJOPropertiesCollector",
      "org.codehaus.jackson.map.deser.std.StdDeserializer",
      "com.google.gson.internal.bind.TypeAdapters$16",
      "com.google.gson.internal.bind.TypeAdapters$17",
      "com.google.gson.internal.bind.TypeAdapters$18",
      "com.google.gson.internal.bind.TypeAdapters$19",
      "org.codehaus.jackson.map.RuntimeJsonMappingException",
      "com.google.gson.TypeAdapter$1",
      "org.codehaus.jackson.map.deser.BeanDeserializerModifier",
      "org.codehaus.jackson.map.deser.std.AtomicBooleanDeserializer",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers",
      "org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter",
      "org.codehaus.jackson.sym.CharsToNameCanonicalizer",
      "org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer",
      "org.codehaus.jackson.map.ser.std.StdJdkSerializers",
      "org.codehaus.jackson.map.deser.std.StdScalarDeserializer",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$BooleanArraySerializer",
      "org.codehaus.jackson.ObjectCodec",
      "org.codehaus.jackson.map.introspect.AnnotatedMethod",
      "org.codehaus.jackson.map.ser.std.StdKeySerializer",
      "org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty",
      "org.codehaus.jackson.map.ser.std.StringCollectionSerializer",
      "org.codehaus.jackson.map.jsontype.TypeResolverBuilder",
      "org.codehaus.jackson.map.ser.StdSerializers$IntegerSerializer",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer",
      "org.codehaus.jackson.map.deser.std.DateDeserializer",
      "org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter",
      "org.codehaus.jackson.map.DeserializerFactory$Config",
      "org.codehaus.jackson.node.IntNode",
      "org.codehaus.jackson.map.BeanDescription",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$LongArraySerializer",
      "org.codehaus.jackson.map.ser.PropertyBuilder$1",
      "org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap",
      "org.codehaus.jackson.impl.WriterBasedGenerator",
      "org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl",
      "com.google.gson.JsonParseException",
      "org.codehaus.jackson.map.deser.std.EnumDeserializer",
      "org.codehaus.jackson.annotate.JsonAnySetter",
      "org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty",
      "org.codehaus.jackson.map.SerializerFactory$Config",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$URIDeserializer",
      "org.codehaus.jackson.map.Deserializers",
      "org.json.JSONPointerException",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer",
      "org.codehaus.jackson.JsonParser",
      "org.codehaus.jackson.map.annotate.JacksonInject",
      "org.codehaus.jackson.map.deser.BeanDeserializer",
      "org.codehaus.jackson.map.introspect.MemberKey",
      "org.codehaus.jackson.map.ser.std.StaticListSerializerBase",
      "org.codehaus.jackson.annotate.JsonAnyGetter",
      "org.codehaus.jackson.io.UTF8Writer",
      "org.codehaus.jackson.map.type.MapType",
      "org.codehaus.jackson.annotate.JsonBackReference",
      "org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer",
      "org.codehaus.jackson.map.type.ArrayType",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$SqlDateDeserializer",
      "org.codehaus.jackson.map.deser.AbstractDeserializer",
      "org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector",
      "org.codehaus.jackson.map.ser.impl.PropertySerializerMap",
      "org.codehaus.jackson.map.ser.std.NullSerializer",
      "org.codehaus.jackson.map.util.Named",
      "org.codehaus.jackson.node.BaseJsonNode",
      "org.codehaus.jackson.map.deser.std.TokenBufferDeserializer",
      "org.codehaus.jackson.impl.JsonWriteContext",
      "org.codehaus.jackson.map.MappingJsonFactory",
      "com.google.gson.internal.bind.TypeAdapters$35$1",
      "org.codehaus.jackson.map.deser.BeanDeserializerFactory",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$ShortDeserializer",
      "org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl",
      "org.codehaus.jackson.annotate.JsonIgnoreType",
      "org.codehaus.jackson.map.DeserializationConfig",
      "org.codehaus.jackson.sym.BytesToNameCanonicalizer$TableInfo",
      "org.codehaus.jackson.map.ser.BeanSerializer",
      "org.codehaus.jackson.map.ser.BeanPropertyWriter",
      "org.codehaus.jackson.map.Serializers",
      "com.google.gson.stream.JsonWriter",
      "org.codehaus.jackson.node.ObjectNode",
      "org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicReferenceSerializer",
      "org.codehaus.jackson.map.DeserializationConfig$Feature",
      "org.codehaus.jackson.map.ser.impl.SerializerCache",
      "org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer",
      "org.codehaus.jackson.map.type.TypeParser",
      "org.codehaus.jackson.map.deser.std.CalendarDeserializer",
      "org.codehaus.jackson.map.introspect.AnnotatedField",
      "org.codehaus.jackson.map.deser.ValueInstantiators",
      "org.codehaus.jackson.map.ser.impl.FailingSerializer",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$CurrencyDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$PrimitiveOrWrapperDeserializer",
      "org.codehaus.jackson.impl.Utf8Generator",
      "org.codehaus.jackson.node.NumericNode",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$FloatArraySerializer",
      "org.codehaus.jackson.map.ser.PropertyBuilder",
      "org.codehaus.jackson.JsonNode",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$Base",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$NumberDeserializer",
      "org.codehaus.jackson.annotate.JsonValue",
      "org.codehaus.jackson.JsonFactory",
      "org.codehaus.jackson.node.ArrayNode",
      "org.codehaus.jackson.map.ser.StdSerializers$SqlDateSerializer",
      "com.google.gson.internal.bind.TypeAdapters$2",
      "com.google.gson.internal.bind.TypeAdapters$1",
      "org.codehaus.jackson.map.KeyDeserializer",
      "org.codehaus.jackson.map.ser.std.MapSerializer",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ShortKD",
      "com.google.gson.internal.bind.TypeAdapters$8",
      "com.google.gson.internal.bind.TypeAdapters$7",
      "com.google.gson.internal.bind.TypeAdapters$9",
      "com.google.gson.internal.bind.TypeAdapters$4",
      "com.google.gson.internal.bind.TypeAdapters$3",
      "com.google.gson.internal.bind.TypeAdapters$6",
      "com.google.gson.internal.bind.TypeAdapters$5",
      "org.codehaus.jackson.map.ResolvableDeserializer",
      "org.codehaus.jackson.map.introspect.BasicBeanDescription",
      "com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator",
      "org.codehaus.jackson.annotate.JsonPropertyOrder",
      "org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion",
      "org.codehaus.jackson.map.DeserializationContext",
      "org.codehaus.jackson.map.JsonMappingException",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DateKD",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$StringDeser",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD",
      "org.codehaus.jackson.annotate.JsonProperty",
      "com.google.gson.internal.Streams$AppendableWriter",
      "org.codehaus.jackson.node.DecimalNode",
      "org.codehaus.jackson.JsonStreamContext",
      "org.codehaus.jackson.map.ser.std.BeanSerializerBase",
      "org.codehaus.jackson.map.deser.StdDeserializers",
      "org.codehaus.jackson.map.ser.std.SerializableSerializer",
      "org.codehaus.jackson.map.deser.std.CollectionDeserializer",
      "com.google.gson.JsonSyntaxException",
      "org.codehaus.jackson.map.ser.std.JsonValueSerializer",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$StringKD",
      "org.codehaus.jackson.map.ser.impl.UnwrappingBeanSerializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$FloatDeserializer",
      "org.codehaus.jackson.annotate.JsonWriteNullProperties",
      "org.codehaus.jackson.map.ContextualSerializer",
      "org.json.JSONArray",
      "org.codehaus.jackson.map.ClassIntrospector$MixInResolver",
      "org.codehaus.jackson.node.DoubleNode",
      "org.codehaus.jackson.map.deser.std.StringDeserializer",
      "org.codehaus.jackson.map.deser.SettableBeanProperty",
      "org.codehaus.jackson.map.SerializerProvider",
      "org.codehaus.jackson.map.deser.std.TimestampDeserializer",
      "org.codehaus.jackson.map.deser.std.MapDeserializer",
      "com.google.gson.TypeAdapter",
      "org.codehaus.jackson.annotate.JsonManagedReference",
      "org.codehaus.jackson.map.introspect.Annotated",
      "org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Single",
      "org.codehaus.jackson.map.util.Annotations",
      "org.codehaus.jackson.sym.NameN",
      "org.codehaus.jackson.map.introspect.AnnotatedClass",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$BooleanDeser",
      "org.codehaus.jackson.map.ser.std.TokenBufferSerializer",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$CharArraySerializer",
      "org.codehaus.jackson.node.BigIntegerNode",
      "org.codehaus.jackson.map.DeserializerProvider",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$FloatKD",
      "org.codehaus.jackson.map.ser.impl.UnknownSerializer",
      "org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
      "org.codehaus.jackson.map.AnnotationIntrospector",
      "org.codehaus.jackson.map.MapperConfig$Impl",
      "org.codehaus.jackson.sym.Name1",
      "org.codehaus.jackson.sym.Name2",
      "org.codehaus.jackson.sym.Name3",
      "org.codehaus.jackson.map.ser.std.EnumMapSerializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$BigIntegerDeserializer",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$IntArraySerializer",
      "org.codehaus.jackson.map.ClassIntrospector",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$UuidKD",
      "org.codehaus.jackson.map.util.ClassUtil",
      "com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter",
      "org.codehaus.jackson.io.IOContext",
      "org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicLongSerializer",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$LongDeser",
      "org.codehaus.jackson.sym.BytesToNameCanonicalizer",
      "com.google.gson.stream.JsonReader",
      "org.codehaus.jackson.map.util.BeanUtil",
      "org.codehaus.jackson.map.type.TypeFactory",
      "org.codehaus.jackson.annotate.JsonUnwrapped",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$ByteArraySerializer",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$FloatDeser",
      "org.codehaus.jackson.map.JsonDeserializer",
      "org.codehaus.jackson.map.ser.std.SerializerBase",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CalendarKD",
      "org.codehaus.jackson.map.ser.std.ScalarSerializerBase",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ShortDeser",
      "org.codehaus.jackson.map.BeanProperty",
      "com.google.gson.stream.MalformedJsonException",
      "org.codehaus.jackson.map.deser.std.ThrowableDeserializer",
      "org.codehaus.jackson.map.introspect.VisibilityChecker",
      "org.codehaus.jackson.map.ObjectMapper",
      "org.codehaus.jackson.util.ByteArrayBuilder",
      "org.codehaus.jackson.map.annotate.JsonFilter",
      "org.codehaus.jackson.map.ser.std.InetAddressSerializer",
      "org.codehaus.jackson.map.jsontype.SubtypeResolver",
      "org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey",
      "org.codehaus.jackson.map.type.SimpleType",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$EnumKD",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer",
      "org.codehaus.jackson.map.util.Provider",
      "org.codehaus.jackson.map.BeanPropertyDefinition",
      "org.codehaus.jackson.annotate.JacksonAnnotation",
      "com.google.gson.internal.bind.TypeAdapters$26$1",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ByteDeser",
      "org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer",
      "org.codehaus.jackson.annotate.JsonSetter",
      "org.codehaus.jackson.annotate.JsonGetter",
      "org.codehaus.jackson.io.SegmentedStringWriter",
      "com.google.gson.internal.bind.JsonTreeReader",
      "org.codehaus.jackson.map.ser.std.SerializableWithTypeSerializer",
      "org.codehaus.jackson.map.ext.OptionalHandlerFactory",
      "org.codehaus.jackson.JsonParser$Feature",
      "com.google.gson.internal.LinkedTreeMap",
      "org.codehaus.jackson.map.annotate.JsonSerialize",
      "com.google.gson.internal.LazilyParsedNumber",
      "org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
      "org.codehaus.jackson.util.CharTypes",
      "org.codehaus.jackson.map.ser.BeanSerializerModifier",
      "org.codehaus.jackson.map.ser.impl.JsonSerializerMap",
      "com.google.gson.JsonElement",
      "org.codehaus.jackson.map.introspect.AnnotatedMember",
      "org.codehaus.jackson.annotate.JsonRawValue",
      "org.codehaus.jackson.annotate.JsonIgnore",
      "org.codehaus.jackson.type.JavaType",
      "org.codehaus.jackson.map.ser.std.EnumSerializer",
      "org.codehaus.jackson.map.type.ClassKey",
      "org.codehaus.jackson.map.ser.impl.UnwrappingBeanPropertyWriter",
      "org.codehaus.jackson.node.NullNode",
      "org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver",
      "org.codehaus.jackson.map.MapperConfig",
      "org.codehaus.jackson.map.introspect.AnnotatedParameter",
      "org.codehaus.jackson.map.Module$SetupContext",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer",
      "org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$LongDeserializer",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializers",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer",
      "org.codehaus.jackson.annotate.JsonAutoDetect",
      "org.codehaus.jackson.map.BeanProperty$Std",
      "org.codehaus.jackson.map.deser.std.ObjectArrayDeserializer"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DataToolkit_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "system.controller.tools.DataToolkit",
      "org.codehaus.jackson.ObjectCodec",
      "org.codehaus.jackson.type.JavaType",
      "org.codehaus.jackson.map.type.TypeBase",
      "org.codehaus.jackson.map.type.SimpleType",
      "org.codehaus.jackson.map.ClassIntrospector",
      "org.codehaus.jackson.map.introspect.Annotated",
      "org.codehaus.jackson.map.introspect.AnnotatedClass",
      "org.codehaus.jackson.map.introspect.AnnotationMap",
      "org.codehaus.jackson.map.BeanDescription",
      "org.codehaus.jackson.map.introspect.BasicBeanDescription",
      "org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter",
      "org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter",
      "org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter",
      "org.codehaus.jackson.map.introspect.BasicClassIntrospector$MinimalMethodFilter",
      "org.codehaus.jackson.map.introspect.BasicClassIntrospector",
      "org.codehaus.jackson.map.AnnotationIntrospector",
      "org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector",
      "org.codehaus.jackson.annotate.JsonMethod",
      "org.codehaus.jackson.annotate.JsonAutoDetect$Visibility",
      "org.codehaus.jackson.map.introspect.VisibilityChecker$Std",
      "org.codehaus.jackson.map.ObjectMapper",
      "org.codehaus.jackson.JsonParser$Feature",
      "org.codehaus.jackson.JsonGenerator$Feature",
      "org.codehaus.jackson.JsonFactory",
      "org.codehaus.jackson.map.MappingJsonFactory",
      "org.codehaus.jackson.sym.CharsToNameCanonicalizer",
      "org.codehaus.jackson.sym.BytesToNameCanonicalizer",
      "org.codehaus.jackson.sym.BytesToNameCanonicalizer$TableInfo",
      "org.codehaus.jackson.map.type.TypeParser",
      "org.codehaus.jackson.map.type.TypeFactory",
      "org.codehaus.jackson.map.util.StdDateFormat",
      "org.codehaus.jackson.map.MapperConfig",
      "org.codehaus.jackson.map.MapperConfig$Impl",
      "org.codehaus.jackson.map.SerializationConfig",
      "org.codehaus.jackson.map.SerializationConfig$Feature",
      "org.codehaus.jackson.map.MapperConfig$Base",
      "org.codehaus.jackson.map.DeserializationConfig",
      "org.codehaus.jackson.map.DeserializationConfig$Feature",
      "org.codehaus.jackson.node.JsonNodeFactory",
      "org.codehaus.jackson.map.SerializerProvider",
      "org.codehaus.jackson.map.JsonSerializer",
      "org.codehaus.jackson.map.ser.std.SerializerBase",
      "org.codehaus.jackson.map.ser.impl.FailingSerializer",
      "org.codehaus.jackson.map.ser.std.StdKeySerializer",
      "org.codehaus.jackson.map.ser.impl.UnknownSerializer",
      "org.codehaus.jackson.map.ser.StdSerializerProvider",
      "org.codehaus.jackson.map.ser.std.NullSerializer",
      "org.codehaus.jackson.map.ser.impl.SerializerCache",
      "org.codehaus.jackson.map.util.RootNameLookup",
      "org.codehaus.jackson.map.DeserializerProvider",
      "org.codehaus.jackson.map.deser.StdDeserializerProvider",
      "org.codehaus.jackson.map.DeserializerFactory",
      "org.codehaus.jackson.map.deser.StdDeserializers",
      "org.codehaus.jackson.map.JsonDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer",
      "org.codehaus.jackson.map.deser.std.UntypedObjectDeserializer",
      "org.codehaus.jackson.map.type.ClassKey",
      "org.codehaus.jackson.map.deser.std.StdScalarDeserializer",
      "org.codehaus.jackson.map.deser.std.StringDeserializer",
      "org.codehaus.jackson.map.deser.std.ClassDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$PrimitiveOrWrapperDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$BooleanDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$ByteDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$ShortDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$CharacterDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$IntegerDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$LongDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$FloatDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$DoubleDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$NumberDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$BigDecimalDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$BigIntegerDeserializer",
      "org.codehaus.jackson.map.deser.std.CalendarDeserializer",
      "org.codehaus.jackson.map.deser.std.DateDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$SqlDateDeserializer",
      "org.codehaus.jackson.map.deser.std.TimestampDeserializer",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$UUIDDeserializer",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$URLDeserializer",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$URIDeserializer",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$CurrencyDeserializer",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$PatternDeserializer",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$LocaleDeserializer",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$InetAddressDeserializer",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$TimeZoneDeserializer",
      "org.codehaus.jackson.map.deser.std.FromStringDeserializer$CharsetDeserializer",
      "org.codehaus.jackson.map.deser.std.StdDeserializer$StackTraceElementDeserializer",
      "org.codehaus.jackson.map.deser.std.AtomicBooleanDeserializer",
      "org.codehaus.jackson.map.deser.std.TokenBufferDeserializer",
      "org.codehaus.jackson.map.deser.std.JavaTypeDeserializer",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializers",
      "org.codehaus.jackson.map.KeyDeserializer",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$BoolKD",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ByteKD",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$ShortKD",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$IntKD",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$LongKD",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$FloatKD",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DoubleKD",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$DateKD",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CalendarKD",
      "org.codehaus.jackson.map.deser.std.StdKeyDeserializer$UuidKD",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$Base",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$BooleanDeser",
      "org.codehaus.jackson.map.type.TypeBindings",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ByteDeser",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$ShortDeser",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$IntDeser",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$LongDeser",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$FloatDeser",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$DoubleDeser",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$StringDeser",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$CharDeser",
      "org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers",
      "org.codehaus.jackson.map.deser.BasicDeserializerFactory",
      "org.codehaus.jackson.map.ext.OptionalHandlerFactory",
      "org.codehaus.jackson.map.DeserializerFactory$Config",
      "org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl",
      "org.codehaus.jackson.map.deser.BeanDeserializerFactory",
      "org.codehaus.jackson.map.SerializerFactory",
      "org.codehaus.jackson.map.ser.std.ScalarSerializerBase",
      "org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase",
      "org.codehaus.jackson.map.ser.std.StringSerializer",
      "org.codehaus.jackson.map.ser.std.ToStringSerializer",
      "org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer",
      "org.codehaus.jackson.map.ser.StdSerializers$IntegerSerializer",
      "org.codehaus.jackson.map.ser.StdSerializers$LongSerializer",
      "org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer",
      "org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer",
      "org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer",
      "org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer",
      "org.codehaus.jackson.map.ser.std.CalendarSerializer",
      "org.codehaus.jackson.map.ser.std.DateSerializer",
      "org.codehaus.jackson.map.ser.StdSerializers$SqlDateSerializer",
      "org.codehaus.jackson.map.ser.StdSerializers$SqlTimeSerializer",
      "org.codehaus.jackson.map.ser.std.StdJdkSerializers",
      "org.codehaus.jackson.map.ser.std.ContainerSerializerBase",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$BooleanArraySerializer",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$ByteArraySerializer",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$CharArraySerializer",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$ShortArraySerializer",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$IntArraySerializer",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$LongArraySerializer",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$FloatArraySerializer",
      "org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer",
      "org.codehaus.jackson.map.ser.BasicSerializerFactory",
      "org.codehaus.jackson.map.SerializerFactory$Config",
      "org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl",
      "org.codehaus.jackson.map.ser.BeanSerializerFactory",
      "com.google.gson.JsonParser",
      "org.json.JSONObject$Null",
      "org.json.JSONObject",
      "org.codehaus.jackson.io.SegmentedStringWriter",
      "org.codehaus.jackson.util.BufferRecycler",
      "org.codehaus.jackson.util.BufferRecycler$ByteBufferType",
      "org.codehaus.jackson.util.BufferRecycler$CharBufferType",
      "org.codehaus.jackson.util.TextBuffer",
      "org.codehaus.jackson.io.IOContext",
      "org.codehaus.jackson.JsonGenerator",
      "org.codehaus.jackson.impl.JsonGeneratorBase",
      "org.codehaus.jackson.util.CharTypes",
      "org.codehaus.jackson.impl.WriterBasedGenerator",
      "org.codehaus.jackson.JsonStreamContext",
      "org.codehaus.jackson.impl.JsonWriteContext",
      "org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap",
      "org.codehaus.jackson.map.ser.impl.JsonSerializerMap",
      "org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey",
      "org.json.JSONTokener",
      "org.json.JSONException",
      "org.json.JSONArray",
      "org.codehaus.jackson.map.util.ArrayBuilders",
      "org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator",
      "org.codehaus.jackson.map.util.ClassUtil",
      "org.codehaus.jackson.map.introspect.AnnotatedMethodMap",
      "org.codehaus.jackson.map.introspect.AnnotatedMember",
      "org.codehaus.jackson.map.introspect.AnnotatedWithParams",
      "org.codehaus.jackson.map.introspect.AnnotatedMethod",
      "org.codehaus.jackson.map.introspect.MemberKey",
      "org.codehaus.jackson.map.introspect.AnnotatedConstructor",
      "org.codehaus.jackson.map.introspect.POJOPropertiesCollector",
      "org.codehaus.jackson.map.util.BeanUtil",
      "org.codehaus.jackson.map.introspect.AnnotatedParameter",
      "org.codehaus.jackson.map.ser.BeanSerializerBuilder",
      "org.codehaus.jackson.JsonProcessingException",
      "org.codehaus.jackson.map.JsonMappingException",
      "com.google.gson.JsonElement",
      "com.google.gson.JsonObject",
      "com.google.gson.internal.LinkedTreeMap$1",
      "com.google.gson.internal.LinkedTreeMap",
      "com.google.gson.internal.LinkedTreeMap$Node",
      "com.google.gson.stream.JsonWriter",
      "com.google.gson.internal.Streams",
      "com.google.gson.TypeAdapter",
      "com.google.gson.internal.bind.TypeAdapters$1",
      "com.google.gson.TypeAdapter$1",
      "com.google.gson.internal.bind.TypeAdapters$32",
      "com.google.gson.internal.bind.TypeAdapters$2",
      "com.google.gson.internal.bind.TypeAdapters$3",
      "com.google.gson.internal.bind.TypeAdapters$4",
      "com.google.gson.internal.bind.TypeAdapters$33",
      "com.google.gson.internal.bind.TypeAdapters$5",
      "com.google.gson.internal.bind.TypeAdapters$6",
      "com.google.gson.internal.bind.TypeAdapters$7",
      "com.google.gson.internal.bind.TypeAdapters$8",
      "com.google.gson.internal.bind.TypeAdapters$9",
      "com.google.gson.internal.bind.TypeAdapters$10",
      "com.google.gson.internal.bind.TypeAdapters$11",
      "com.google.gson.internal.bind.TypeAdapters$12",
      "com.google.gson.internal.bind.TypeAdapters$13",
      "com.google.gson.internal.bind.TypeAdapters$14",
      "com.google.gson.internal.bind.TypeAdapters$15",
      "com.google.gson.internal.bind.TypeAdapters$16",
      "com.google.gson.internal.bind.TypeAdapters$17",
      "com.google.gson.internal.bind.TypeAdapters$18",
      "com.google.gson.internal.bind.TypeAdapters$19",
      "com.google.gson.internal.bind.TypeAdapters$20",
      "com.google.gson.internal.bind.TypeAdapters$21",
      "com.google.gson.internal.bind.TypeAdapters$22",
      "com.google.gson.internal.bind.TypeAdapters$23",
      "com.google.gson.internal.bind.TypeAdapters$35",
      "com.google.gson.internal.bind.TypeAdapters$24",
      "com.google.gson.internal.bind.TypeAdapters$25",
      "com.google.gson.internal.bind.TypeAdapters$26",
      "com.google.gson.internal.bind.TypeAdapters$27",
      "com.google.gson.internal.bind.TypeAdapters$34",
      "com.google.gson.internal.bind.TypeAdapters$28",
      "com.google.gson.internal.bind.TypeAdapters$29",
      "com.google.gson.internal.bind.TypeAdapters$30",
      "com.google.gson.internal.bind.TypeAdapters",
      "com.google.gson.internal.LinkedTreeMap$EntrySet",
      "com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator",
      "com.google.gson.internal.LinkedTreeMap$EntrySet$1",
      "com.google.gson.JsonArray",
      "org.codehaus.jackson.map.introspect.AnnotatedField",
      "org.codehaus.jackson.annotate.JsonAutoDetect$1",
      "org.codehaus.jackson.map.BeanPropertyDefinition",
      "org.codehaus.jackson.map.introspect.POJOPropertyBuilder",
      "org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node",
      "org.codehaus.jackson.map.ser.PropertyBuilder",
      "org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion",
      "org.codehaus.jackson.map.BeanProperty$Std",
      "org.codehaus.jackson.map.ser.PropertyBuilder$1",
      "org.codehaus.jackson.map.ser.BeanPropertyWriter",
      "org.codehaus.jackson.io.SerializedString",
      "org.codehaus.jackson.map.ser.impl.PropertySerializerMap",
      "org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty",
      "org.codehaus.jackson.map.ser.std.BeanSerializerBase",
      "org.codehaus.jackson.map.ser.BeanSerializer",
      "org.codehaus.jackson.map.JsonMappingException$Reference"
    );
  }
}
