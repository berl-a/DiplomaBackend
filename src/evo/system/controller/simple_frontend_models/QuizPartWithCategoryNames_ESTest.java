/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 03 15:51:31 GMT 2018
 */

package system.controller.simple_frontend_models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import system.controller.simple_frontend_models.QuizPartWithCategoryNames;
import system.model.quizzes.QuizPart;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class QuizPartWithCategoryNames_ESTest extends QuizPartWithCategoryNames_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QuizPartWithCategoryNames quizPartWithCategoryNames0 = new QuizPartWithCategoryNames("", "", (-1), 0, "kJA=EQ4,g?A^n_iL", "", "4J6dC1rgI\"0 s", "", "d,i/>6VF.O`", ".S^krb1'6cF<J~[");
      assertEquals(".S^krb1'6cF<J~[", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals("", quizPartWithCategoryNames0.getSubcategory());
      assertEquals("kJA=EQ4,g?A^n_iL", quizPartWithCategoryNames0.getCategory());
      assertEquals("", quizPartWithCategoryNames0.getName());
      assertEquals("", quizPartWithCategoryNames0.getQuiz());
      assertEquals(0, quizPartWithCategoryNames0.getNumber());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames0.getId());
      assertEquals("", quizPartWithCategoryNames0.getCategoryName());
      assertEquals((-1), quizPartWithCategoryNames0.getOrder());
      assertEquals("d,i/>6VF.O`", quizPartWithCategoryNames0.getSubcategoryName());
      assertEquals("4J6dC1rgI\"0 s", quizPartWithCategoryNames0.getSubsubcategory());
      assertNotNull(quizPartWithCategoryNames0);
      
      QuizPartWithCategoryNames quizPartWithCategoryNames1 = new QuizPartWithCategoryNames(quizPartWithCategoryNames0);
      assertEquals(".S^krb1'6cF<J~[", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals("", quizPartWithCategoryNames0.getSubcategory());
      assertEquals("kJA=EQ4,g?A^n_iL", quizPartWithCategoryNames0.getCategory());
      assertEquals("", quizPartWithCategoryNames0.getName());
      assertEquals("", quizPartWithCategoryNames0.getQuiz());
      assertEquals(0, quizPartWithCategoryNames0.getNumber());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames0.getId());
      assertEquals("", quizPartWithCategoryNames0.getCategoryName());
      assertEquals((-1), quizPartWithCategoryNames0.getOrder());
      assertEquals("d,i/>6VF.O`", quizPartWithCategoryNames0.getSubcategoryName());
      assertEquals("4J6dC1rgI\"0 s", quizPartWithCategoryNames0.getSubsubcategory());
      assertEquals("4J6dC1rgI\"0 s", quizPartWithCategoryNames1.getSubsubcategory());
      assertEquals((-1), quizPartWithCategoryNames1.getOrder());
      assertNull(quizPartWithCategoryNames1.getSubcategoryName());
      assertEquals("kJA=EQ4,g?A^n_iL", quizPartWithCategoryNames1.getCategory());
      assertEquals(0, quizPartWithCategoryNames1.getNumber());
      assertEquals("", quizPartWithCategoryNames1.getName());
      assertNull(quizPartWithCategoryNames1.getSubsubcategoryName());
      assertEquals("", quizPartWithCategoryNames1.getQuiz());
      assertNull(quizPartWithCategoryNames1.getCategoryName());
      assertEquals("", quizPartWithCategoryNames1.getSubcategory());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames1.getId());
      assertNotNull(quizPartWithCategoryNames1);
      assertFalse(quizPartWithCategoryNames1.equals((Object)quizPartWithCategoryNames0));
      
      String string0 = quizPartWithCategoryNames1.getSubsubcategoryName();
      assertEquals(".S^krb1'6cF<J~[", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals("", quizPartWithCategoryNames0.getSubcategory());
      assertEquals("kJA=EQ4,g?A^n_iL", quizPartWithCategoryNames0.getCategory());
      assertEquals("", quizPartWithCategoryNames0.getName());
      assertEquals("", quizPartWithCategoryNames0.getQuiz());
      assertEquals(0, quizPartWithCategoryNames0.getNumber());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames0.getId());
      assertEquals("", quizPartWithCategoryNames0.getCategoryName());
      assertEquals((-1), quizPartWithCategoryNames0.getOrder());
      assertEquals("d,i/>6VF.O`", quizPartWithCategoryNames0.getSubcategoryName());
      assertEquals("4J6dC1rgI\"0 s", quizPartWithCategoryNames0.getSubsubcategory());
      assertEquals("4J6dC1rgI\"0 s", quizPartWithCategoryNames1.getSubsubcategory());
      assertEquals((-1), quizPartWithCategoryNames1.getOrder());
      assertNull(quizPartWithCategoryNames1.getSubcategoryName());
      assertEquals("kJA=EQ4,g?A^n_iL", quizPartWithCategoryNames1.getCategory());
      assertEquals(0, quizPartWithCategoryNames1.getNumber());
      assertEquals("", quizPartWithCategoryNames1.getName());
      assertNull(quizPartWithCategoryNames1.getSubsubcategoryName());
      assertEquals("", quizPartWithCategoryNames1.getQuiz());
      assertNull(quizPartWithCategoryNames1.getCategoryName());
      assertEquals("", quizPartWithCategoryNames1.getSubcategory());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames1.getId());
      assertNull(string0);
      assertNotSame(quizPartWithCategoryNames0, quizPartWithCategoryNames1);
      assertNotSame(quizPartWithCategoryNames1, quizPartWithCategoryNames0);
      assertFalse(quizPartWithCategoryNames0.equals((Object)quizPartWithCategoryNames1));
      assertFalse(quizPartWithCategoryNames1.equals((Object)quizPartWithCategoryNames0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QuizPartWithCategoryNames quizPartWithCategoryNames0 = new QuizPartWithCategoryNames("", "", (-3595), (-3595), "", "", "", "lyZ9mAfU^\"", "", "");
      assertEquals("lyZ9mAfU^\"", quizPartWithCategoryNames0.getCategoryName());
      assertEquals((-3595), quizPartWithCategoryNames0.getOrder());
      assertEquals((-3595), quizPartWithCategoryNames0.getNumber());
      assertEquals("", quizPartWithCategoryNames0.getName());
      assertEquals("", quizPartWithCategoryNames0.getQuiz());
      assertEquals("", quizPartWithCategoryNames0.getCategory());
      assertEquals("", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals("", quizPartWithCategoryNames0.getSubcategory());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames0.getId());
      assertEquals("", quizPartWithCategoryNames0.getSubsubcategory());
      assertEquals("", quizPartWithCategoryNames0.getSubcategoryName());
      assertNotNull(quizPartWithCategoryNames0);
      
      String string0 = quizPartWithCategoryNames0.getSubsubcategoryName();
      assertEquals("", string0);
      assertEquals("lyZ9mAfU^\"", quizPartWithCategoryNames0.getCategoryName());
      assertEquals((-3595), quizPartWithCategoryNames0.getOrder());
      assertEquals((-3595), quizPartWithCategoryNames0.getNumber());
      assertEquals("", quizPartWithCategoryNames0.getName());
      assertEquals("", quizPartWithCategoryNames0.getQuiz());
      assertEquals("", quizPartWithCategoryNames0.getCategory());
      assertEquals("", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals("", quizPartWithCategoryNames0.getSubcategory());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames0.getId());
      assertEquals("", quizPartWithCategoryNames0.getSubsubcategory());
      assertEquals("", quizPartWithCategoryNames0.getSubcategoryName());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QuizPartWithCategoryNames quizPartWithCategoryNames0 = new QuizPartWithCategoryNames("system.controller.simple_frontend_models.QuizPartWithCategoryNames", "", 1, 1, "[", "system.model.quizzes.QuizPart", "system.model.quizzes.QuizPart", "", ":", "system.model.quizzes.QuizPart");
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames0.getId());
      assertEquals("system.controller.simple_frontend_models.QuizPartWithCategoryNames", quizPartWithCategoryNames0.getName());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubcategory());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubsubcategory());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals("", quizPartWithCategoryNames0.getQuiz());
      assertEquals("", quizPartWithCategoryNames0.getCategoryName());
      assertEquals(1, quizPartWithCategoryNames0.getNumber());
      assertEquals("[", quizPartWithCategoryNames0.getCategory());
      assertEquals(":", quizPartWithCategoryNames0.getSubcategoryName());
      assertEquals(1, quizPartWithCategoryNames0.getOrder());
      assertNotNull(quizPartWithCategoryNames0);
      
      String string0 = quizPartWithCategoryNames0.getSubcategoryName();
      assertEquals(":", string0);
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames0.getId());
      assertEquals("system.controller.simple_frontend_models.QuizPartWithCategoryNames", quizPartWithCategoryNames0.getName());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubcategory());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubsubcategory());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals("", quizPartWithCategoryNames0.getQuiz());
      assertEquals("", quizPartWithCategoryNames0.getCategoryName());
      assertEquals(1, quizPartWithCategoryNames0.getNumber());
      assertEquals("[", quizPartWithCategoryNames0.getCategory());
      assertEquals(":", quizPartWithCategoryNames0.getSubcategoryName());
      assertEquals(1, quizPartWithCategoryNames0.getOrder());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QuizPartWithCategoryNames quizPartWithCategoryNames0 = new QuizPartWithCategoryNames("", "", (-1), 0, "kJA=EQ4,g?A^n_iL", "", "4J6dC1rgI\"0 s", "", "d,i/>6VF.O`", ".S^krb1'6cF<J~[");
      assertEquals(".S^krb1'6cF<J~[", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals("", quizPartWithCategoryNames0.getSubcategory());
      assertEquals("kJA=EQ4,g?A^n_iL", quizPartWithCategoryNames0.getCategory());
      assertEquals((-1), quizPartWithCategoryNames0.getOrder());
      assertEquals("d,i/>6VF.O`", quizPartWithCategoryNames0.getSubcategoryName());
      assertEquals("4J6dC1rgI\"0 s", quizPartWithCategoryNames0.getSubsubcategory());
      assertEquals("", quizPartWithCategoryNames0.getQuiz());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames0.getId());
      assertEquals(0, quizPartWithCategoryNames0.getNumber());
      assertEquals("", quizPartWithCategoryNames0.getCategoryName());
      assertEquals("", quizPartWithCategoryNames0.getName());
      assertNotNull(quizPartWithCategoryNames0);
      
      QuizPartWithCategoryNames quizPartWithCategoryNames1 = new QuizPartWithCategoryNames(quizPartWithCategoryNames0);
      assertEquals(".S^krb1'6cF<J~[", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals("", quizPartWithCategoryNames0.getSubcategory());
      assertEquals("kJA=EQ4,g?A^n_iL", quizPartWithCategoryNames0.getCategory());
      assertEquals((-1), quizPartWithCategoryNames0.getOrder());
      assertEquals("d,i/>6VF.O`", quizPartWithCategoryNames0.getSubcategoryName());
      assertEquals("4J6dC1rgI\"0 s", quizPartWithCategoryNames0.getSubsubcategory());
      assertEquals("", quizPartWithCategoryNames0.getQuiz());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames0.getId());
      assertEquals(0, quizPartWithCategoryNames0.getNumber());
      assertEquals("", quizPartWithCategoryNames0.getCategoryName());
      assertEquals("", quizPartWithCategoryNames0.getName());
      assertEquals("kJA=EQ4,g?A^n_iL", quizPartWithCategoryNames1.getCategory());
      assertEquals("4J6dC1rgI\"0 s", quizPartWithCategoryNames1.getSubsubcategory());
      assertEquals("", quizPartWithCategoryNames1.getName());
      assertNull(quizPartWithCategoryNames1.getCategoryName());
      assertEquals("", quizPartWithCategoryNames1.getSubcategory());
      assertEquals((-1), quizPartWithCategoryNames1.getOrder());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames1.getId());
      assertNull(quizPartWithCategoryNames1.getSubsubcategoryName());
      assertNull(quizPartWithCategoryNames1.getSubcategoryName());
      assertEquals("", quizPartWithCategoryNames1.getQuiz());
      assertEquals(0, quizPartWithCategoryNames1.getNumber());
      assertNotNull(quizPartWithCategoryNames1);
      assertFalse(quizPartWithCategoryNames1.equals((Object)quizPartWithCategoryNames0));
      
      String string0 = quizPartWithCategoryNames1.getCategoryName();
      assertEquals(".S^krb1'6cF<J~[", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals("", quizPartWithCategoryNames0.getSubcategory());
      assertEquals("kJA=EQ4,g?A^n_iL", quizPartWithCategoryNames0.getCategory());
      assertEquals((-1), quizPartWithCategoryNames0.getOrder());
      assertEquals("d,i/>6VF.O`", quizPartWithCategoryNames0.getSubcategoryName());
      assertEquals("4J6dC1rgI\"0 s", quizPartWithCategoryNames0.getSubsubcategory());
      assertEquals("", quizPartWithCategoryNames0.getQuiz());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames0.getId());
      assertEquals(0, quizPartWithCategoryNames0.getNumber());
      assertEquals("", quizPartWithCategoryNames0.getCategoryName());
      assertEquals("", quizPartWithCategoryNames0.getName());
      assertEquals("kJA=EQ4,g?A^n_iL", quizPartWithCategoryNames1.getCategory());
      assertEquals("4J6dC1rgI\"0 s", quizPartWithCategoryNames1.getSubsubcategory());
      assertEquals("", quizPartWithCategoryNames1.getName());
      assertNull(quizPartWithCategoryNames1.getCategoryName());
      assertEquals("", quizPartWithCategoryNames1.getSubcategory());
      assertEquals((-1), quizPartWithCategoryNames1.getOrder());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames1.getId());
      assertNull(quizPartWithCategoryNames1.getSubsubcategoryName());
      assertNull(quizPartWithCategoryNames1.getSubcategoryName());
      assertEquals("", quizPartWithCategoryNames1.getQuiz());
      assertEquals(0, quizPartWithCategoryNames1.getNumber());
      assertNull(string0);
      assertNotSame(quizPartWithCategoryNames0, quizPartWithCategoryNames1);
      assertNotSame(quizPartWithCategoryNames1, quizPartWithCategoryNames0);
      assertFalse(quizPartWithCategoryNames0.equals((Object)quizPartWithCategoryNames1));
      assertFalse(quizPartWithCategoryNames1.equals((Object)quizPartWithCategoryNames0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QuizPartWithCategoryNames quizPartWithCategoryNames0 = new QuizPartWithCategoryNames("system.controller.simple_frontend_models.QuizPartWithCategoryNames", "system.controller.simple_frontend_models.QuizPartWithCategoryNames", "", (-2803), (-2803), "system.controller.simple_frontend_models.QuizPartWithCategoryNames", "NeuZU#g>jM", (String) null, "system.model.quizzes.QuizPart", (String) null, "NeuZU#g>jM");
      assertEquals("", quizPartWithCategoryNames0.getQuiz());
      assertEquals("NeuZU#g>jM", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals("system.controller.simple_frontend_models.QuizPartWithCategoryNames", quizPartWithCategoryNames0.getId());
      assertEquals("NeuZU#g>jM", quizPartWithCategoryNames0.getSubcategory());
      assertEquals((-2803), quizPartWithCategoryNames0.getNumber());
      assertNull(quizPartWithCategoryNames0.getSubcategoryName());
      assertEquals("system.controller.simple_frontend_models.QuizPartWithCategoryNames", quizPartWithCategoryNames0.getName());
      assertEquals("system.controller.simple_frontend_models.QuizPartWithCategoryNames", quizPartWithCategoryNames0.getCategory());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getCategoryName());
      assertNull(quizPartWithCategoryNames0.getSubsubcategory());
      assertEquals((-2803), quizPartWithCategoryNames0.getOrder());
      assertNotNull(quizPartWithCategoryNames0);
      
      String string0 = quizPartWithCategoryNames0.getCategoryName();
      assertEquals("system.model.quizzes.QuizPart", string0);
      assertEquals("", quizPartWithCategoryNames0.getQuiz());
      assertEquals("NeuZU#g>jM", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals("system.controller.simple_frontend_models.QuizPartWithCategoryNames", quizPartWithCategoryNames0.getId());
      assertEquals("NeuZU#g>jM", quizPartWithCategoryNames0.getSubcategory());
      assertEquals((-2803), quizPartWithCategoryNames0.getNumber());
      assertNull(quizPartWithCategoryNames0.getSubcategoryName());
      assertEquals("system.controller.simple_frontend_models.QuizPartWithCategoryNames", quizPartWithCategoryNames0.getName());
      assertEquals("system.controller.simple_frontend_models.QuizPartWithCategoryNames", quizPartWithCategoryNames0.getCategory());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getCategoryName());
      assertNull(quizPartWithCategoryNames0.getSubsubcategory());
      assertEquals((-2803), quizPartWithCategoryNames0.getOrder());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QuizPartWithCategoryNames quizPartWithCategoryNames0 = null;
      try {
        quizPartWithCategoryNames0 = new QuizPartWithCategoryNames((QuizPart) null, "system.controller.simple_frontend_models.QuizPartWithCategoryNames", "vBNsXO{N0r^", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("system.model.quizzes.QuizPart", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QuizPartWithCategoryNames quizPartWithCategoryNames0 = null;
      try {
        quizPartWithCategoryNames0 = new QuizPartWithCategoryNames((QuizPart) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("system.model.quizzes.QuizPart", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QuizPartWithCategoryNames quizPartWithCategoryNames0 = new QuizPartWithCategoryNames("system.controller.simple_frontend_models.QuizPartWithCategoryNames", "", 1, 1, "[", "system.model.quizzes.QuizPart", "system.model.quizzes.QuizPart", "", ":", "system.model.quizzes.QuizPart");
      assertEquals("system.controller.simple_frontend_models.QuizPartWithCategoryNames", quizPartWithCategoryNames0.getName());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubcategory());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames0.getId());
      assertEquals(":", quizPartWithCategoryNames0.getSubcategoryName());
      assertEquals(1, quizPartWithCategoryNames0.getOrder());
      assertEquals("", quizPartWithCategoryNames0.getCategoryName());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals(1, quizPartWithCategoryNames0.getNumber());
      assertEquals("[", quizPartWithCategoryNames0.getCategory());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubsubcategory());
      assertEquals("", quizPartWithCategoryNames0.getQuiz());
      assertNotNull(quizPartWithCategoryNames0);
      
      QuizPartWithCategoryNames quizPartWithCategoryNames1 = new QuizPartWithCategoryNames(quizPartWithCategoryNames0);
      assertEquals("system.controller.simple_frontend_models.QuizPartWithCategoryNames", quizPartWithCategoryNames0.getName());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubcategory());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames0.getId());
      assertEquals(":", quizPartWithCategoryNames0.getSubcategoryName());
      assertEquals(1, quizPartWithCategoryNames0.getOrder());
      assertEquals("", quizPartWithCategoryNames0.getCategoryName());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals(1, quizPartWithCategoryNames0.getNumber());
      assertEquals("[", quizPartWithCategoryNames0.getCategory());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubsubcategory());
      assertEquals("", quizPartWithCategoryNames0.getQuiz());
      assertNull(quizPartWithCategoryNames1.getCategoryName());
      assertEquals(1, quizPartWithCategoryNames1.getNumber());
      assertEquals("[", quizPartWithCategoryNames1.getCategory());
      assertNull(quizPartWithCategoryNames1.getSubsubcategoryName());
      assertNull(quizPartWithCategoryNames1.getSubcategoryName());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames1.getSubsubcategory());
      assertEquals("", quizPartWithCategoryNames1.getQuiz());
      assertEquals("system.controller.simple_frontend_models.QuizPartWithCategoryNames", quizPartWithCategoryNames1.getName());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames1.getSubcategory());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames1.getId());
      assertEquals(1, quizPartWithCategoryNames1.getOrder());
      assertNotNull(quizPartWithCategoryNames1);
      assertFalse(quizPartWithCategoryNames1.equals((Object)quizPartWithCategoryNames0));
      
      String string0 = quizPartWithCategoryNames1.getSubcategoryName();
      assertEquals("system.controller.simple_frontend_models.QuizPartWithCategoryNames", quizPartWithCategoryNames0.getName());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubcategory());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames0.getId());
      assertEquals(":", quizPartWithCategoryNames0.getSubcategoryName());
      assertEquals(1, quizPartWithCategoryNames0.getOrder());
      assertEquals("", quizPartWithCategoryNames0.getCategoryName());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals(1, quizPartWithCategoryNames0.getNumber());
      assertEquals("[", quizPartWithCategoryNames0.getCategory());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubsubcategory());
      assertEquals("", quizPartWithCategoryNames0.getQuiz());
      assertNull(quizPartWithCategoryNames1.getCategoryName());
      assertEquals(1, quizPartWithCategoryNames1.getNumber());
      assertEquals("[", quizPartWithCategoryNames1.getCategory());
      assertNull(quizPartWithCategoryNames1.getSubsubcategoryName());
      assertNull(quizPartWithCategoryNames1.getSubcategoryName());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames1.getSubsubcategory());
      assertEquals("", quizPartWithCategoryNames1.getQuiz());
      assertEquals("system.controller.simple_frontend_models.QuizPartWithCategoryNames", quizPartWithCategoryNames1.getName());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames1.getSubcategory());
      assertEquals("00000000-0100-4000-8200-000003000000", quizPartWithCategoryNames1.getId());
      assertEquals(1, quizPartWithCategoryNames1.getOrder());
      assertNull(string0);
      assertNotSame(quizPartWithCategoryNames0, quizPartWithCategoryNames1);
      assertNotSame(quizPartWithCategoryNames1, quizPartWithCategoryNames0);
      assertFalse(quizPartWithCategoryNames0.equals((Object)quizPartWithCategoryNames1));
      assertFalse(quizPartWithCategoryNames1.equals((Object)quizPartWithCategoryNames0));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QuizPartWithCategoryNames quizPartWithCategoryNames0 = new QuizPartWithCategoryNames("system.controller.simple_frontend_models.QuizPartWithCategoryNames", "", 1, 1, "[", "system.model.quizzes.QuizPart", "system.model.quizzes.QuizPart", "", ":", "system.model.quizzes.QuizPart");
      assertEquals("", quizPartWithCategoryNames0.getCategoryName());
      
      quizPartWithCategoryNames0.setCategoryName("");
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals(":", quizPartWithCategoryNames0.getSubcategoryName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QuizPartWithCategoryNames quizPartWithCategoryNames0 = new QuizPartWithCategoryNames("system.controller.simple_frontend_models.QuizPartWithCategoryNames", "", 1, 1, "[", "system.model.quizzes.QuizPart", "system.model.quizzes.QuizPart", "", ":", "system.model.quizzes.QuizPart");
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubsubcategoryName());
      
      quizPartWithCategoryNames0.setSubsubcategoryName(":");
      assertEquals("", quizPartWithCategoryNames0.getCategoryName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QuizPartWithCategoryNames quizPartWithCategoryNames0 = new QuizPartWithCategoryNames("system.controller.simple_frontend_models.QuizPartWithCategoryNames", "", 1, 1, "[", "system.model.quizzes.QuizPart", "system.model.quizzes.QuizPart", "", ":", "system.model.quizzes.QuizPart");
      String string0 = quizPartWithCategoryNames0.getSubsubcategoryName();
      assertEquals("", quizPartWithCategoryNames0.getCategoryName());
      assertEquals(":", quizPartWithCategoryNames0.getSubcategoryName());
      assertEquals("system.model.quizzes.QuizPart", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QuizPartWithCategoryNames quizPartWithCategoryNames0 = new QuizPartWithCategoryNames("system.controller.simple_frontend_models.QuizPartWithCategoryNames", "system.controller.simple_frontend_models.QuizPartWithCategoryNames", "", (-2803), (-2803), "system.controller.simple_frontend_models.QuizPartWithCategoryNames", "NeuZU#g>jM", (String) null, "system.model.quizzes.QuizPart", (String) null, "NeuZU#g>jM");
      QuizPartWithCategoryNames quizPartWithCategoryNames1 = new QuizPartWithCategoryNames(quizPartWithCategoryNames0, "system.controller.simple_frontend_models.QuizPartWithCategoryNames", "", "system.controller.simple_frontend_models.QuizPartWithCategoryNames");
      assertEquals("system.controller.simple_frontend_models.QuizPartWithCategoryNames", quizPartWithCategoryNames1.getSubsubcategoryName());
      assertEquals("system.controller.simple_frontend_models.QuizPartWithCategoryNames", quizPartWithCategoryNames1.getCategoryName());
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getCategoryName());
      assertEquals("", quizPartWithCategoryNames1.getSubcategoryName());
      assertEquals("NeuZU#g>jM", quizPartWithCategoryNames0.getSubsubcategoryName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QuizPartWithCategoryNames quizPartWithCategoryNames0 = new QuizPartWithCategoryNames("system.controller.simple_frontend_models.QuizPartWithCategoryNames", "", 1, 1, "[", "system.model.quizzes.QuizPart", "system.model.quizzes.QuizPart", "", ":", "system.model.quizzes.QuizPart");
      assertEquals(":", quizPartWithCategoryNames0.getSubcategoryName());
      
      quizPartWithCategoryNames0.setSubcategoryName("");
      assertEquals("", quizPartWithCategoryNames0.getCategoryName());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QuizPartWithCategoryNames quizPartWithCategoryNames0 = new QuizPartWithCategoryNames("system.controller.simple_frontend_models.QuizPartWithCategoryNames", "", 1, 1, "[", "system.model.quizzes.QuizPart", "system.model.quizzes.QuizPart", "", ":", "system.model.quizzes.QuizPart");
      String string0 = quizPartWithCategoryNames0.getCategoryName();
      assertEquals("", string0);
      assertEquals("system.model.quizzes.QuizPart", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals(":", quizPartWithCategoryNames0.getSubcategoryName());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QuizPartWithCategoryNames quizPartWithCategoryNames0 = new QuizPartWithCategoryNames("", "", (-3595), (-3595), "", "", "", "lyZ9mAfU^\"", "", "");
      String string0 = quizPartWithCategoryNames0.getSubcategoryName();
      assertEquals("", quizPartWithCategoryNames0.getSubsubcategoryName());
      assertEquals("lyZ9mAfU^\"", quizPartWithCategoryNames0.getCategoryName());
      assertEquals("", string0);
  }
}
