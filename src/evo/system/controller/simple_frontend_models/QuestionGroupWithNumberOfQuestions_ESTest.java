/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 04 01:25:30 GMT 2018
 */

package system.controller.simple_frontend_models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import system.controller.simple_frontend_models.QuestionGroupWithNumberOfQuestions;
import system.model.questions.QuestionGroup;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class QuestionGroupWithNumberOfQuestions_ESTest extends QuestionGroupWithNumberOfQuestions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = QuestionGroupWithNumberOfQuestions.__CLR4_1_21ir1irjp8v55zg.lambdaInc((-1162), "k.]#aV;@K\"eq", 0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QuestionGroupWithNumberOfQuestions.__CLR4_1_21ir1irjp8v55zg questionGroupWithNumberOfQuestions___CLR4_1_21ir1irjp8v55zg0 = new QuestionGroupWithNumberOfQuestions.__CLR4_1_21ir1irjp8v55zg();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QuestionGroup questionGroup0 = mock(QuestionGroup.class, new ViolatedAssumptionAnswer());
      system.controller.simple_frontend_models.QuestionGroupWithNumberOfQuestions questionGroupWithNumberOfQuestions0 = new system.controller.simple_frontend_models.QuestionGroupWithNumberOfQuestions(questionGroup0, 0);
      int int0 = questionGroupWithNumberOfQuestions0.getNumberOfQuestions();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QuestionGroup questionGroup0 = mock(QuestionGroup.class, new ViolatedAssumptionAnswer());
      system.controller.simple_frontend_models.QuestionGroupWithNumberOfQuestions questionGroupWithNumberOfQuestions0 = new system.controller.simple_frontend_models.QuestionGroupWithNumberOfQuestions(questionGroup0, (-1162));
      int int0 = questionGroupWithNumberOfQuestions0.getNumberOfQuestions();
      assertEquals((-1162), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      system.controller.simple_frontend_models.QuestionGroupWithNumberOfQuestions questionGroupWithNumberOfQuestions0 = null;
      try {
        questionGroupWithNumberOfQuestions0 = new system.controller.simple_frontend_models.QuestionGroupWithNumberOfQuestions((QuestionGroup) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("system.model.questions.QuestionGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      QuestionGroup questionGroup0 = mock(QuestionGroup.class, new ViolatedAssumptionAnswer());
      system.controller.simple_frontend_models.QuestionGroupWithNumberOfQuestions questionGroupWithNumberOfQuestions0 = new system.controller.simple_frontend_models.QuestionGroupWithNumberOfQuestions(questionGroup0, 2371);
      questionGroupWithNumberOfQuestions0.setNumberOfQuestions(2371);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      QuestionGroup questionGroup0 = mock(QuestionGroup.class, new ViolatedAssumptionAnswer());
      system.controller.simple_frontend_models.QuestionGroupWithNumberOfQuestions questionGroupWithNumberOfQuestions0 = new system.controller.simple_frontend_models.QuestionGroupWithNumberOfQuestions(questionGroup0, 2371);
      int int0 = questionGroupWithNumberOfQuestions0.getNumberOfQuestions();
      assertEquals(2371, int0);
  }
}
