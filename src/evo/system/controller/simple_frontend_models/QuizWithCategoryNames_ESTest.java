/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 04 01:29:20 GMT 2018
 */

package system.controller.simple_frontend_models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import system.controller.simple_frontend_models.QuizWithCategoryNames;
import system.model.quizzes.Quiz;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class QuizWithCategoryNames_ESTest extends QuizWithCategoryNames_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = QuizWithCategoryNames.__CLR4_1_2pupujp8v555s.lambdaInc(1235, (Object) "9g\"", 206);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QuizWithCategoryNames.__CLR4_1_2pupujp8v555s quizWithCategoryNames___CLR4_1_2pupujp8v555s0 = new QuizWithCategoryNames.__CLR4_1_2pupujp8v555s();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Quiz quiz0 = mock(Quiz.class, new ViolatedAssumptionAnswer());
      system.controller.simple_frontend_models.QuizWithCategoryNames quizWithCategoryNames0 = new system.controller.simple_frontend_models.QuizWithCategoryNames(quiz0, "", "Y*YDV_oe2Oc=fVh#t/", "Y*YDV_oe2Oc=fVh#t/");
      system.controller.simple_frontend_models.QuizWithCategoryNames quizWithCategoryNames1 = new system.controller.simple_frontend_models.QuizWithCategoryNames(quizWithCategoryNames0);
      String string0 = quizWithCategoryNames1.getSubsubcategoryName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Quiz quiz0 = mock(Quiz.class, new ViolatedAssumptionAnswer());
      system.controller.simple_frontend_models.QuizWithCategoryNames quizWithCategoryNames0 = new system.controller.simple_frontend_models.QuizWithCategoryNames(quiz0, "", "Y*YDV_oe2Oc=fVh#t/", "Y*YDV_oe2Oc=fVh#t/");
      String string0 = quizWithCategoryNames0.getSubsubcategoryName();
      assertEquals("Y*YDV_oe2Oc=fVh#t/", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Quiz quiz0 = mock(Quiz.class, new ViolatedAssumptionAnswer());
      system.controller.simple_frontend_models.QuizWithCategoryNames quizWithCategoryNames0 = new system.controller.simple_frontend_models.QuizWithCategoryNames(quiz0, "", "Y*YDV_oe2Oc=fVh#t/", "Y*YDV_oe2Oc=fVh#t/");
      system.controller.simple_frontend_models.QuizWithCategoryNames quizWithCategoryNames1 = new system.controller.simple_frontend_models.QuizWithCategoryNames(quizWithCategoryNames0);
      String string0 = quizWithCategoryNames1.getSubcategoryName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Quiz quiz0 = mock(Quiz.class, new ViolatedAssumptionAnswer());
      system.controller.simple_frontend_models.QuizWithCategoryNames quizWithCategoryNames0 = new system.controller.simple_frontend_models.QuizWithCategoryNames(quiz0, "", "Y*YDV_oe2Oc=fVh#t/", "Y*YDV_oe2Oc=fVh#t/");
      String string0 = quizWithCategoryNames0.getSubcategoryName();
      assertEquals("Y*YDV_oe2Oc=fVh#t/", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Quiz quiz0 = mock(Quiz.class, new ViolatedAssumptionAnswer());
      system.controller.simple_frontend_models.QuizWithCategoryNames quizWithCategoryNames0 = new system.controller.simple_frontend_models.QuizWithCategoryNames(quiz0, "", "Y*YDV_oe2Oc=fVh#t/", "Y*YDV_oe2Oc=fVh#t/");
      quizWithCategoryNames0.setCategoryName((String) null);
      String string0 = quizWithCategoryNames0.getCategoryName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Quiz quiz0 = mock(Quiz.class, new ViolatedAssumptionAnswer());
      system.controller.simple_frontend_models.QuizWithCategoryNames quizWithCategoryNames0 = new system.controller.simple_frontend_models.QuizWithCategoryNames(quiz0, "system.model.quizzes.Quiz", "system.model.quizzes.Quiz", "system.model.quizzes.Quiz");
      String string0 = quizWithCategoryNames0.getCategoryName();
      assertEquals("system.model.quizzes.Quiz", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      system.controller.simple_frontend_models.QuizWithCategoryNames quizWithCategoryNames0 = null;
      try {
        quizWithCategoryNames0 = new system.controller.simple_frontend_models.QuizWithCategoryNames((Quiz) null, "system.model.quizzes.QuizPart", "system.model.quizzes.Quiz", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("system.model.quizzes.Quiz", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      system.controller.simple_frontend_models.QuizWithCategoryNames quizWithCategoryNames0 = null;
      try {
        quizWithCategoryNames0 = new system.controller.simple_frontend_models.QuizWithCategoryNames((Quiz) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("system.model.quizzes.Quiz", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Quiz quiz0 = mock(Quiz.class, new ViolatedAssumptionAnswer());
      system.controller.simple_frontend_models.QuizWithCategoryNames quizWithCategoryNames0 = new system.controller.simple_frontend_models.QuizWithCategoryNames(quiz0, "", "", "");
      String string0 = quizWithCategoryNames0.getSubsubcategoryName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Quiz quiz0 = mock(Quiz.class, new ViolatedAssumptionAnswer());
      system.controller.simple_frontend_models.QuizWithCategoryNames quizWithCategoryNames0 = new system.controller.simple_frontend_models.QuizWithCategoryNames(quiz0, "", "", "");
      String string0 = quizWithCategoryNames0.getSubcategoryName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Quiz quiz0 = mock(Quiz.class, new ViolatedAssumptionAnswer());
      system.controller.simple_frontend_models.QuizWithCategoryNames quizWithCategoryNames0 = new system.controller.simple_frontend_models.QuizWithCategoryNames(quiz0, "", "", "");
      quizWithCategoryNames0.setSubcategoryName("");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Quiz quiz0 = mock(Quiz.class, new ViolatedAssumptionAnswer());
      system.controller.simple_frontend_models.QuizWithCategoryNames quizWithCategoryNames0 = new system.controller.simple_frontend_models.QuizWithCategoryNames(quiz0, "", "", "");
      quizWithCategoryNames0.setSubsubcategoryName("system.model.quizzes.Quiz");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Quiz quiz0 = mock(Quiz.class, new ViolatedAssumptionAnswer());
      system.controller.simple_frontend_models.QuizWithCategoryNames quizWithCategoryNames0 = new system.controller.simple_frontend_models.QuizWithCategoryNames(quiz0, "", "", "");
      String string0 = quizWithCategoryNames0.getCategoryName();
      assertEquals("", string0);
  }
}
