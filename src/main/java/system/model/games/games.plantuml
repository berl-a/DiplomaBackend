@startuml

title __GAMES's Class Diagram__\n

  package system.model {
    package system.model.games {
      interface Answer {
          {abstract} + getCorrect()
          {abstract} + setCorrect()
      }
    }
  }
  

  package system.model {
    package system.model.games {
      class FreeTextAnswer {
          - answer : String
          - correct : Double
          + FreeTextAnswer()
          + FreeTextAnswer()
          + getAnswer()
          + setAnswer()
          + getCorrect()
          + setCorrect()
      }
    }
  }
  

  package system.model {
    package system.model.games {
      class Game {
          - id : String
          - quiz : String
          - name : String
          - code : String
          - players : LinkedList<String>
          - questionsForPlayers : LinkedList<ListOfQuestions>
          - playersAnswers : LinkedList<PlayerAnswers>
          - fullTime : long
          - numberOfQuestions : int
          - startTime : long
          - oneQuestionTime : long
          + Game()
          + Game()
          + Game()
          + Game()
          + addPlayer()
          + getId()
          + setId()
          + getQuiz()
          + setQuiz()
          + getName()
          + setName()
          + getCode()
          + setCode()
          + getPlayers()
          + setPlayers()
          + getQuestionsForPlayers()
          + setQuestionsForPlayers()
          + getPlayersAnswers()
          + setPlayersAnswers()
          + getFullTime()
          + setFullTime()
          + getNumberOfQuestions()
          + setNumberOfQuestions()
          + getStartTime()
          + setStartTime()
          + getOneQuestionTime()
          + setOneQuestionTime()
      }
    }
  }
  

  package system.model {
    package system.model.games {
      class GameToolkit {
      }
    }
  }
  

  package system.model {
    package system.model.games {
      class ListOfQuestions {
          - questionIds : LinkedList<String>
          + ListOfQuestions()
          + ListOfQuestions()
          + getQuestionIds()
          + setQuestionIds()
      }
    }
  }
  

  package system.model {
    package system.model.games {
      class ListOfRealQuestions {
          - questions : LinkedList<Question>
          + ListOfRealQuestions()
          + ListOfRealQuestions()
          + getQuestions()
          + setQuestions()
      }
    }
  }
  

  package system.model {
    package system.model.games {
      class MultipleChoiceAnswer {
          - answerIndexes : LinkedList<Integer>
          - correct : Double
          + MultipleChoiceAnswer()
          + MultipleChoiceAnswer()
          + getAnswerIndexes()
          + setAnswerIndexes()
          + getCorrect()
          + setCorrect()
      }
    }
  }
  

  package system.model {
    package system.model.games {
      class Player {
          - id : String
          - name : String
          + Player()
          + Player()
          + Player()
          + getId()
          + setId()
          + getName()
          + setName()
      }
    }
  }
  

  package system.model {
    package system.model.games {
      class PlayerAnswers {
          - answers : HashMap<String, Answer>
          + addAnswer()
          + getAnswers()
          + setAnswers()
      }
    }
  }
  

  package system.model {
    package system.model.games {
      class PlayerPoints {
          - points : LinkedList<Double>
          + PlayerPoints()
          + PlayerPoints()
          + getPoints()
          + setPoints()
      }
    }
  }
  

  package system.model {
    package system.model.games {
      class SingleChoiceAnswer {
          - answerIndex : int
          - correct : Double
          + SingleChoiceAnswer()
          + SingleChoiceAnswer()
          + getAnswerIndex()
          + setAnswerIndex()
          + getCorrect()
          + setCorrect()
      }
    }
  }
  

  FreeTextAnswer -up-|> Answer
  Game -up-|> Idable
  Game -up-|> Serializable
  GameToolkit o-- QuizService : quizService
  GameToolkit o-- QuestionService : questionService
  GameToolkit o-- QuestionGroupService : questionGroupService
  ListOfQuestions -up-|> Serializable
  ListOfRealQuestions -up-|> Serializable
  MultipleChoiceAnswer -up-|> Answer
  Player -up-|> Idable
  Player -up-|> Serializable
  PlayerAnswers -up-|> Serializable
  PlayerPoints -up-|> Serializable
  SingleChoiceAnswer -up-|> Answer


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
