@startuml

title __DATABASE's Class Diagram__\n

  package system.controller {
    package system.controller.service {
      package system.controller.service.database {
        interface DatabaseEntry {
            {abstract} + getFieldNames()
            {abstract} + getFields()
            {abstract} + getField()
        }
      }
    }
  }
  

  package system.controller {
    package system.controller.service {
      package system.controller.service.database {
        interface DatabaseService {
            {abstract} + init()
            {abstract} + getSettingsFromFile()
            {abstract} + connect()
            {abstract} + getDataFromDatabase()
            {abstract} + addDataToDatabase()
            {abstract} + getFieldValuesInDbFormat()
            {abstract} + removeItemWhereStringFieldEqualsValue()
            {abstract} + getStringFieldValuesInDbFormat()
            {abstract} + getFieldNamesInDBFormat()
        }
      }
    }
  }
  

  package system.controller {
    package system.controller.service {
      package system.controller.service.database {
        enum FilterBehaviour {
          AND
          OR
        }
      }
    }
  }
  

  package system.controller {
    package system.controller.service {
      package system.controller.service.database {
        class IntStringBlobDatabaseEntry {
            - content : HashMap<String, Object>
            + IntStringBlobDatabaseEntry()
            + IntStringBlobDatabaseEntry()
            + getFieldNames()
            + getFields()
            + getField()
        }
      }
    }
  }
  

  package system.controller {
    package system.controller.service {
      package system.controller.service.database {
        class MySQLDatabaseService {
            + CONNECTION_TIMEOUT_MS : int
            - connection : Connection
            - hasConnected : boolean
            - failedConnection : boolean
            ~ dbPort : int
            ~ dbName : String
            ~ dbUser : String
            ~ dbPassword : String
            ~ dbServerName : String
            + init()
            + getSettingsFromFile()
            + connect()
            + getStringDataFromDatabase()
            - getStringDataFromDatabaseInternal()
            + addStringDataToDatabase()
            - addStringDataToDatabaseInternal()
            + getDataFromDatabase()
            - getDataFromDatabaseInternal()
            + addDataToDatabase()
            - addDataToDatabaseInternal()
            + getFieldValuesInDbFormat()
            + removeDataFromDatabase()
            - removeDataFromDatabaseInternal()
            + removeItemWhereStringFieldEqualsValue()
            + removeItemWhereFieldEqualsValue()
            - removeItemWhereFieldEqualsValueInternal()
            + getDeleteFilter()
            + getStringFieldValuesInDbFormat()
            + getFieldNamesInDBFormat()
        }
      }
    }
  }
  

  package system.controller {
    package system.controller.service {
      package system.controller.service.database {
        class StringDatabaseEntry {
            - content : HashMap<String, String>
            ~ StringDatabaseEntry()
            + StringDatabaseEntry()
            + getFieldNames()
            + getFields()
            + getField()
            + toString()
        }
      }
    }
  }
  

  IntStringBlobDatabaseEntry -up-|> DatabaseEntry
  MySQLDatabaseService -up-|> DatabaseService
  StringDatabaseEntry -up-|> DatabaseEntry


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
