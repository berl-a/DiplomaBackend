/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 07 15:13:13 GMT 2018
 */

package system.model.classes.games;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import system.model.classes.games.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Player player0 = new Player();
      String string0 = player0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Player player0 = new Player("JBFzy{0l4t");
      String string0 = player0.getName();
      assertEquals("JBFzy{0l4t", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Player player0 = new Player("JBFzy{0l4t");
      String string0 = player0.getId();
      assertEquals("00000000-0100-4000-8200-000003000000", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Player player0 = new Player("", "");
      player0.setId("");
      assertEquals("", player0.getId());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Player player0 = new Player();
      player0.setId((String) null);
      String string0 = player0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Player player0 = new Player("", "");
      String string0 = player0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Player player0 = new Player("", "");
      String string0 = player0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Player player0 = new Player(" y(bLg[kO{G");
      player0.setName("system.model.classes.games.Player");
      assertEquals("system.model.classes.games.Player", player0.getName());
  }
}
